Metadata-Version: 2.1
Name: qafnet
Version: 0.1.1
Summary: QAFNet - Interactive Online Learning through Questions, Answers and Feedback Network.
Home-page: https://github.com/whitead/bolift
Author: Siddartha Nath
Author-email: ucabsn4@ucl.ac.uk
License: MIT
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
Provides-Extra: gpr

# ‚ùì QAFNet: Interactive Online Learning through Questions, Answers and Feedback Network ‚ùì

QAFNet utilises large language models (LLMs) to perform Question-Answering. Here's how it works:

1. **Question/Teaching Phase:** We feed the LLM information in the form of input and output pairs, along with additional context information. This 'teaches' the model about the domain-specific problem we're trying to solve.

2. **Answer/Prediction Phase:** We then query the LLM to predict the output for a given input. This tests the model's understanding and application of the information it has been taught.

3. **Feedback Phase:** Post-prediction, we provide the LLM with feedback on its performance. This feedback is designed to help the model improve its subsequent predictions, effectively 'learning' from its mistakes and successes.

While the LLM's underlying model parameters are not updated during this process (as would be the case in online learning), the context in which the LLM generates predictions is dynamically updated, which can influence the LLM's prediction outcomes.
QAFNet is an extension of concepts introduced in the paper [BO-LIFT](https://github.com/ur-whitelab/BO-LIFT#-bo-lift-bayesian-optimization-using-in-context-learning), which explores the ask-tell interface for LLMs. QAFNet goes a step further by introducing a feedback mechanism to the ask-tell interface, thereby creating a more interactive and adaptive prediction framework.

## Table of content

## QAFNet

## Install üì¶

## Usage üíª

You need to set up your OpenAI API key in order to use QAFNet.
You can do that using the `os` Python library:

```py
import os
os.environ["OPENAI_API_KEY"] = "<your-key-here>"
```

### Quickstart üî•

### Citation

Please, cite ...
